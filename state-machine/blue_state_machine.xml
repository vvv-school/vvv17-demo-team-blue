<module>
    <name>blue_state_machine</name>
    <version>1.0</version>

    <description-long>
    Blue team mood module
    </description-long>

    <authors>
        <author email="bence.magyar.robotics@gmail.com"> Bence Magyar </author>
    </authors>

    <arguments>
        <!--param default="coder" required="no" desc="select the coder/decoder mode"> mode </param-->
    </arguments>

    <!-- <data> can have multiple <input> or <output> tags. -->
    <data>
        <!--input port_type="stream">            
            <type>yarp::os::Bottle</type>
            <port carrier="udp">/mood/in</port>
            <required>yes</required>
            <description>recieves text messages of the state machine's inner state</description>
        </input-->

        <input port_type="service">
            <type>yarp::os::Bottle</type>
            <port carrier="tcp">/state-machine/command</port>
            <description>receives rpc commands: [quit],...</description>
        </input>

        <output port_type="service">
            <type>yarp::os::Bottle</type>
            <port carrier="tcp">/state-machine/look</port>
            <description>exchanges commands and replies with gaze-module</description>
        </output>

        <output port_type="service">
            <type>yarp::os::Bottle</type>
            <port carrier="tcp">/state-machine/position</port>
            <description>exchanges commands and replies with movement-module</description>
        </output>


        <input port_type="stream">
            <type>yarp::os::Bottle</type>
            <port carrier="tcp">/state-machine/duck:i</port>
            <description>Receives duck position</description>
        </input>

        <input port_type="stream">
            <type>yarp::os::Bottle</type>
            <port carrier="tcp">/state-machine/card:i</port>
            <description>Receives card position</description>
        </input>

        <input port_type="stream">
            <type>yarp::os::Bottle</type>
            <port carrier="tcp">/state-machine/alert:i</port>
            <description>Receives alert from watch dog</description>
        </input>

        <output port_type="stream">
            <type>yarp::os::Bottle</type>
            <port carrier="tcp">/state-machine/state:o</port>
            <description>Output of current state as string</description>
        </output>

    </data>

</module>
